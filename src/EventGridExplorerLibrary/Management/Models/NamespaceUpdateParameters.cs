// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventGrid.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties to update namespace.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NamespaceUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the NamespaceUpdateParameters class.
        /// </summary>
        public NamespaceUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NamespaceUpdateParameters class.
        /// </summary>
        /// <param name="tags">Tags of the namespace resource.</param>
        /// <param name="identity">Namespace resource identity
        /// information.</param>
        /// <param name="sku">Represents available Sku pricing tiers.</param>
        /// <param name="topicSpacesConfiguration">Topic spaces configuration
        /// properties that can be updated.</param>
        /// <param name="publicNetworkAccess">This determines if traffic is
        /// allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring &lt;seealso
        /// cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// /&gt;. Possible values include: 'Enabled', 'Disabled',
        /// 'SecuredByPerimeter'</param>
        /// <param name="inboundIpRules">This can be used to restrict traffic
        /// from specific IPs instead of all IPs. Note: These are considered
        /// only if PublicNetworkAccess is enabled.</param>
        public NamespaceUpdateParameters(IDictionary<string, string> tags = default(IDictionary<string, string>), IdentityInfo identity = default(IdentityInfo), NamespaceSku sku = default(NamespaceSku), string publicNetworkAccess = default(string), IList<InboundIpRule> inboundIpRules = default(IList<InboundIpRule>))
        {
            Tags = tags;
            Identity = identity;
            Sku = sku;
            PublicNetworkAccess = publicNetworkAccess;
            InboundIpRules = inboundIpRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets tags of the namespace resource.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets namespace resource identity information.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public IdentityInfo Identity { get; set; }

        /// <summary>
        /// Gets or sets represents available Sku pricing tiers.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public NamespaceSku Sku { get; set; }

        /// <summary>
        /// Gets or sets this determines if traffic is allowed over public
        /// network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring
        /// &amp;lt;seealso
        /// cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules"
        /// /&amp;gt;. Possible values include: 'Enabled', 'Disabled',
        /// 'SecuredByPerimeter'
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

        /// <summary>
        /// Gets or sets this can be used to restrict traffic from specific IPs
        /// instead of all IPs. Note: These are considered only if
        /// PublicNetworkAccess is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.inboundIpRules")]
        public IList<InboundIpRule> InboundIpRules { get; set; }

    }
}
